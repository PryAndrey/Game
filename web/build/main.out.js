(()=>{"use strict";!function(){function i(){this.mem=2,this.Direction=0,this.pos=0}i.prototype.ChooseWays=function(){if(0==t[this.pos+1]||0==t[this.pos-1]||0==t[this.pos+19]||0==t[this.pos-19]||2==t[this.pos+1]||2==t[this.pos-1]||2==t[this.pos+19]||2==t[this.pos-19])for(;0==this.Direction;){var i=(s=1,o=4,s=Math.ceil(s),o=Math.floor(o),Math.floor(Math.random()*(o-s+1))+s);i<=2?1==i?1!=t[this.pos+1]&&4!=t[this.pos+1]&&(this.Direction=1):1!=t[this.pos-1]&&4!=t[this.pos-1]&&(this.Direction=-1):3==i?1!=t[this.pos+19]&&4!=t[this.pos+19]&&(this.Direction=19):1!=t[this.pos-19]&&4!=t[this.pos-19]&&(this.Direction=-19)}var s,o},i.prototype.UpdatePosition=function(){1!=t[this.pos+this.Direction]&&(0==this.mem&&(t[this.pos]=0),2==this.mem&&(t[this.pos]=2),0==t[this.pos+this.Direction]&&(this.mem=0),2==t[this.pos+this.Direction]&&(this.mem=2),t[this.pos+this.Direction]=4,this.pos=this.pos+this.Direction)}}();document.getElementById("canvas").getContext("2d"),new Image,new Image,new Image,new Image,new Image,new Image,new Image,new Image;var t=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,4,1,1,0,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,1,1,2,2,2,1,0,1,0,0,0,0,0,0,0,1,0,1,2,2,2,1,1,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,1,1,0,0,0,0,0,0,0,1,4,4,4,1,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1,2,2,2,1,0,1,0,0,0,4,0,0,0,1,0,1,2,2,2,1,1,1,1,0,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,4,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];new Array})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,